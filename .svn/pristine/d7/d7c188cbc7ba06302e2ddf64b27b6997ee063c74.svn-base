<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xmlns:web="http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
  <display-name></display-name>
  
  <welcome-file-list>
    <welcome-file>/MyShop.jsp</welcome-file>
  </welcome-file-list>
  <error-page>
    <error-code>404</error-code>
    <location>/error/404.jsp</location>
  </error-page>
  
  <!-- 编码过滤器 -->
  <filter>
    <filter-name>characterEncodingFilter</filter-name>
    <filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encoding</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>characterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
 
  <!-- 编码过滤器 2 ywl -->
   <filter>
    <filter-name>SetCharacterEncodingFilter</filter-name>
    <filter-class>cn.xaut.shop.filter.SetCharacterEncodingFilter</filter-class>
    <init-param>
      <param-name>encodingName</param-name>
      <param-value>UTF-8</param-value>
    </init-param>
      <init-param>
      <param-name>enable</param-name>
      <param-value>false</param-value>
    </init-param>
  </filter>
  <filter-mapping>
    <filter-name>SetCharacterEncodingFilter</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>  
  
<!-- Session 过滤器 -->
<!-- 检查用户是否登录了系统的过滤器配置  开始 -->

	<filter>
		<filter-name>SessionFilter</filter-name>
		<filter-class>cn.xaut.shop.filter.SessionFilter</filter-class>
			<init-param>
				<description>将当前登录的用户的信息保存在 session 中时使用的key，如果没有配置此参数，则该过滤器不起作用</description>
     			<param-name>sessionKey</param-name>
     			<param-value>userinfo</param-value>
 			</init-param>
 			<init-param>
	     		<description>
	         		如果用户未登录（即在 session 中 key 为 sessionKey 的属性不存在或为空），则将请求重定向到该 url。
	         		该 url 不包含web应用的 ContextPath。
	         		如果不配置此参数，则在用户未登录系统的情况下，直接重定向到web应用的根路径（/）
	     		</description>
     			<param-name>forwardUrl</param-name>
		    	<param-value>/login.jsp</param-value>
 			</init-param>
 			<init-param>
 				<description>
			         不需要进行拦截的 url 的正则表达式，即：如果当前请求的 url 的 servletPath 能匹配该正则表达式，则直接放行（即使未登录系统）。
			         此参数的值一般为 loginServlet 和 registServlet 等。
			         另外，参数 redirectUrl 的值不用包含在该正则表达式中，因为 redirectUrl 对应的 url 会被自动放行。
			         还有一点需要说明的是，该参数的值不包含web应用的 ContextPath。
			         不拦截 /servlets/loginServlet 和 /servlets/registServlet 
			     </description>
			     <param-name>excepUrlRegex</param-name>
			     <param-value>/(messageAction_getMessageCountShop|frontLogin).action</param-value>
			 </init-param>
			 <init-param>
 				 <description>首页地址</description>
			     <param-name>indexPage</param-name>
			     <param-value>/MyShop.jsp</param-value>
			 </init-param>
	</filter>
	<filter-mapping>
		<filter-name>SessionFilter</filter-name>
 		<url-pattern>*.action</url-pattern>
	</filter-mapping>

<!-- 检查用户是否登录了系统的过滤器配置  结束 -->


<!-- 用户越权操作 这个过滤器必须放在SessionFilter之后 -->
  <filter>
  		<filter-name>unauthorizedOperationFilter</filter-name>
  		<filter-class>cn.xaut.shop.filter.UnauthorizedOperationFilter</filter-class>
  		<init-param>
  			<param-name>forwardUrl</param-name>
		    <param-value>/error/havelogouted.jsp</param-value>
		</init-param>
  </filter>
  <filter-mapping>
  		<filter-name>unauthorizedOperationFilter</filter-name>
  		<url-pattern>*.action</url-pattern>
  </filter-mapping>
    <filter-mapping>
  		<filter-name>unauthorizedOperationFilter</filter-name>
  		<url-pattern>/haveSellGoods/*</url-pattern>
  </filter-mapping>
   <filter-mapping>
  		<filter-name>unauthorizedOperationFilter</filter-name>
  		<url-pattern>/haveBuyGoods/*</url-pattern>
  </filter-mapping>
   <filter-mapping>
  		<filter-name>unauthorizedOperationFilter</filter-name>
  		<url-pattern>/prolongTime/*</url-pattern>
  </filter-mapping>
   <filter-mapping>
  		<filter-name>unauthorizedOperationFilter</filter-name>
  		<url-pattern>/returnGoods/*</url-pattern>
  </filter-mapping>
    <filter-mapping>
  		<filter-name>unauthorizedOperationFilter</filter-name>
  		<url-pattern>/pointEvaluation/*</url-pattern>
  </filter-mapping>
    <filter-mapping>
  		<filter-name>unauthorizedOperationFilter</filter-name>
  		<url-pattern>/shopManage/*</url-pattern>
  </filter-mapping>


<!-- 客服登录过滤器 -->
<filter>  
    <filter-name>AdminFilter</filter-name>  
    <filter-class>cn.xaut.shop.filter.AdminLoginFilter</filter-class>  
    <init-param>  
        <param-name>logonStrings</param-name><!-- 对登录页面不进行过滤 -->  
        <param-value>/AdminStage/login.jsp;adminUserAction_loginAdmin.do</param-value>  
    </init-param>  
    <init-param>  
        <param-name>includeStrings</param-name><!-- 只对指定过滤参数后缀进行过滤 -->  
        <param-value>.action;.jsp</param-value>  
    </init-param>  
    <init-param>  
        <param-name>redirectPath</param-name><!-- 未通过,跳转到登录界面 -->  
        <param-value>/error/admintip.jsp</param-value>  
    </init-param>  
    <init-param>  
        <param-name>disabletestfilter</param-name><!-- Y:过滤无效 -->  
        <param-value>N</param-value>  
    </init-param>  
</filter>  
<filter-mapping>  
    <filter-name>AdminFilter</filter-name>  
    <url-pattern>/AdminStage/*</url-pattern>  
</filter-mapping>  
<filter-mapping>  
    <filter-name>AdminFilter</filter-name>  
    <url-pattern>/shopManage/checkShop.jsp</url-pattern>  
</filter-mapping>  
<filter-mapping>  
    <filter-name>AdminFilter</filter-name>  
    <url-pattern>/shopManage/adminViewShopProgress.jsp</url-pattern>  
</filter-mapping>  
<filter-mapping>  
    <filter-name>AdminFilter</filter-name>  
    <url-pattern>/shopApplyAction_searchAllCheckList.action</url-pattern>  
</filter-mapping>
<filter-mapping>  
    <filter-name>AdminFilter</filter-name>  
    <url-pattern>/shopApplyAction_updateAndSave.action</url-pattern>  
</filter-mapping> 
<filter-mapping>  
    <filter-name>AdminFilter</filter-name>  
    <url-pattern>/shopApplyAction_notpassupdate.action</url-pattern>  
</filter-mapping> 
<filter-mapping>  
    <filter-name>AdminFilter</filter-name>  
    <url-pattern>/shopApplyAction_adminViewShopProgress.action</url-pattern>  
</filter-mapping> 
<filter-mapping>  
    <filter-name>AdminFilter</filter-name>  
    <url-pattern>/shopApplyAction_updateAndSave.action</url-pattern>  
</filter-mapping> 

<!-- 管理员登录过滤器 -->
<filter>  
    <filter-name>SuperUserFilter</filter-name>  
    <filter-class>cn.xaut.shop.filter.SuperUserLoginFilter</filter-class>  
    <init-param>  
        <param-name>logonStrings</param-name><!-- 对登录页面不进行过滤 -->  
        <param-value>/backstage/login.jsp;superUserAction_loginBack.do</param-value>  
    </init-param>  
    <init-param>  
        <param-name>includeStrings</param-name><!-- 只对指定过滤参数后缀进行过滤 -->  
        <param-value>.action;.jsp</param-value>  
    </init-param>  
    <init-param>  
        <param-name>redirectPath</param-name><!-- 未通过跳转到登录界面 -->  
        <param-value>/error/admintip.jsp</param-value>  
    </init-param>  
    <init-param>  
        <param-name>disabletestfilter</param-name><!-- Y:过滤无效 -->  
        <param-value>N</param-value>  
    </init-param>  
</filter>  
<filter-mapping>  
    <filter-name>SuperUserFilter</filter-name>  
    <url-pattern>/backstage/*</url-pattern>  
</filter-mapping>  
  
 <!-- 店铺过滤器 -->
<filter>  
    <filter-name>ShopFilter</filter-name>  
    <filter-class>cn.xaut.shop.filter.ShopFilter</filter-class>  
    <init-param>  
        <param-name>includeStrings</param-name><!-- 只对指定过滤参数后缀进行过滤 -->  
        <param-value>.action;.jsp</param-value>  
    </init-param>  
    <init-param>  
        <param-name>redirectPath</param-name><!-- 未通过,跳转到无权限界面 -->  
        <param-value>/error/admintip.jsp</param-value>  
    </init-param>  
    <init-param>  
        <param-name>disabletestfilter</param-name><!-- Y:过滤无效 -->  
        <param-value>N</param-value>  
    </init-param>  
</filter>   
<filter-mapping>  
    <filter-name>ShopFilter</filter-name>  
    <url-pattern>/haveSellGoods/*</url-pattern>  
</filter-mapping> 
<filter-mapping>  
    <filter-name>ShopFilter</filter-name>  
    <url-pattern>/pointEvaluation/viewShopPoint.jsp</url-pattern>  
</filter-mapping> 
<filter-mapping>  
    <filter-name>ShopFilter</filter-name>  
    <url-pattern>/prolongTime/checkProlong.jsp</url-pattern>  
</filter-mapping> 
<filter-mapping>  
    <filter-name>ShopFilter</filter-name>  
    <url-pattern>/prolongTime/prolongSeller.jsp</url-pattern>  
</filter-mapping> 
<filter-mapping>  
    <filter-name>ShopFilter</filter-name>  
    <url-pattern>/returnGoods/checkReturn.jsp</url-pattern>  
</filter-mapping> 
<filter-mapping>  
    <filter-name>ShopFilter</filter-name>  
    <url-pattern>/returnGoods/confirmReturn.jsp</url-pattern>  
</filter-mapping> 
<filter-mapping>  
    <filter-name>ShopFilter</filter-name>  
    <url-pattern>/Goods/*</url-pattern>  
</filter-mapping> 
<filter-mapping>  
    <filter-name>ShopFilter</filter-name>  
    <url-pattern>/GoodsType/*</url-pattern>  
</filter-mapping>  


   

  <filter>
        <filter-name>CAS Filter</filter-name>
        <filter-class>edu.yale.its.tp.cas.client.filter.CASFilter</filter-class>
        <init-param>
          <param-name>edu.yale.its.tp.cas.client.filter.loginUrl</param-name>
          <param-value>https://my.dlmu.edu.cn/cas/login</param-value>
        </init-param>
        <init-param>
          <param-name>edu.yale.its.tp.cas.client.filter.validateUrl</param-name>
          <param-value>https://my.dlmu.edu.cn/cas/serviceValidate </param-value>
        </init-param>
        <init-param>
          <param-name>edu.yale.its.tp.cas.client.filter.serverName</param-name>
          <param-value>202.118.89.86:80</param-value>
        </init-param>
  </filter>
  <filter-mapping>
        <filter-name>CAS Filter</filter-name>
        <url-pattern>*.chao</url-pattern>
  </filter-mapping>


  
  <filter>
    <filter-name>springSecurityFilterChain</filter-name>
    <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>springSecurityFilterChain</filter-name>
    <url-pattern>/*</url-pattern>
    <dispatcher>REQUEST</dispatcher>
    <dispatcher>FORWARD</dispatcher>
  </filter-mapping>
  <listener>
    <listener-class>org.springframework.security.web.session.HttpSessionEventPublisher</listener-class>
  </listener>
  
  <filter>
    <filter-name>openSessionInView</filter-name>
    <filter-class>org.springframework.orm.hibernate3.support.OpenSessionInViewFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>openSessionInView</filter-name>
    <url-pattern>/*</url-pattern>
  </filter-mapping>
  
   
   <!-- Begin: hx新加把 StrutsPrepareAndExecuteFilter拆成StrutsPrepareFilter和StrutsExecuteFilter 共3部分-->
   <!-- 1、StrutsPrepareFilter -->
  <filter>
  	<filter-name>strutsPrepareFilter</filter-name>
  	<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsPrepareFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>strutsPrepareFilter</filter-name>
    <url-pattern>*.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>strutsPrepareFilter</filter-name>
    <url-pattern>*.action</url-pattern>
    <url-pattern>*.do</url-pattern>
    <url-pattern>*.chao</url-pattern>
  </filter-mapping>
  
  
  <!-- 2、SiteMesh的过滤器 -->
  <filter>
	  <filter-name>sitemesh</filter-name>
	  <filter-class>com.opensymphony.sitemesh.webapp.SiteMeshFilter</filter-class>
  </filter>
  <filter-mapping>
	  <filter-name>sitemesh</filter-name>
	  <url-pattern>*.jsp</url-pattern>
	  <dispatcher>FORWARD</dispatcher>
	  <dispatcher>REQUEST</dispatcher>
  </filter-mapping>
  
  
  <!--3、StrutsExecuteFilter -->
  <filter>
  	<filter-name>strutsExecuteFilter</filter-name>
  	<filter-class>org.apache.struts2.dispatcher.ng.filter.StrutsExecuteFilter</filter-class>
  </filter>
  <filter-mapping>
    <filter-name>strutsExecuteFilter</filter-name>
    <url-pattern>*.jsp</url-pattern>
  </filter-mapping>
  <filter-mapping>
    <filter-name>strutsExecuteFilter</filter-name>
    <url-pattern>*.action</url-pattern>
    <url-pattern>*.do</url-pattern>
    <url-pattern>*.chao</url-pattern>
  </filter-mapping>
  <!-- End hx新加 -->
  
  
  <context-param>
    <param-name>contextConfigLocation</param-name>
    <param-value>classpath:applicationContext-*.xml</param-value>
  </context-param>
  <listener>
    <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
  </listener>
  <listener>
    <listener-class>cn.xaut.shop.listener.ShopServleContextListener</listener-class>
  </listener>
  <listener>
    <listener-class>cn.xaut.shop.listener.ShopSessionListener</listener-class>
  </listener>
  <mime-mapping>
    <extension>doc</extension>
    <mime-type>application/msword</mime-type>
  </mime-mapping>
</web-app>


